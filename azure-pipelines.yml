# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pool:
  vmImage: 'Ubuntu-20.04'

variables:
- group: 'AWS ECR-PUSH PROD'
#- name: SAML2AWS_USERNAME // Set in ADO
#- name: SAML2AWS_PASSWORD // Set in ADO as a secret
#- name: SAML2AWS_ROLE // Set in ADO

steps:
  - task: InstallSSHKey@0
    inputs:
      hostName: github.com,192.30.253.113 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      sshPublicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDCSRatCN0LXkS1sWlzphG6FhtZIwvIlx4w4s6U+Z3TZCSnFCDN0tpD20WQ4qkRT8Q/9FvIyXzn6EQihN+hNtDUdnKecEYADCNuo2r2EzZUjYc4nYOQMUcaSCilu4oWiicR+GuEdUTxzWLqW7K6vRcwUKFsq4zpwva/Gr7SZHzT4IichI25UIOTtmWsnQvfPCSGTtwFocmB06WYNgCBsQxB3Y0RF2Q6BzGiKblOwnLhrp8gEJBm9wLdQiYGcumQPuG5ZxtT/d2EfBuj1+cGQmmhb/QVDY1xi5H7hC83IKGFytZDVGibwcQQUIV2proALE3S/DNSEQoi+cRjmvQkNkVv jandr@DKCPH-LR90PUUNN
      sshKeySecureFile: tika_rsa

  - bash: |
      set -eu -o pipefail

      sudo pip3 install setuptools
      sudo pip3 install awscli

      # Install saml2aws
      VERSION=2.36.0
      DOWNLOAD_URL=https://github.com/Versent/saml2aws/releases/download/v${VERSION}/saml2aws_${VERSION}_linux_amd64.tar.gz
      LOCAL_FILE=./saml2aws.tar.gz
      curl -Lo $LOCAL_FILE $DOWNLOAD_URL
      tar xvzf $LOCAL_FILE
      rm $LOCAL_FILE
      sudo mv saml2aws /usr/local/bin

      # Configure saml2aws
      saml2aws configure --url=https://adfs.dfds.com/adfs/ls/IdpInitiatedSignOn.aspx --idp-provider=ADFS --mfa=Auto --session-duration=28800 --skip-prompt
      saml2aws login --disable-keychain --url=https://adfs.dfds.com/adfs/ls/IdpInitiatedSignOn.aspx --idp-provider=ADFS --mfa=Auto --skip-prompt --force

      export AWS_DEFAULT_REGION=$(AWS_DEFAULT_REGION)

      cd server

      # Use credentials for S3 bucket
      eval $(saml2aws script --url=https://adfs.dfds.com/adfs/ls/IdpInitiatedSignOn.aspx --idp-provider=ADFS --mfa=Auto)
      aws sts get-caller-identity
      make prereqs

      # Use credentials for ECR push
      export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
      export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
      unset AWS_SESSION_TOKEN
      unset AWS_SECURITY_TOKEN
      unset AWS_CREDENTIAL_EXPIRATION

      aws sts get-caller-identity
      make release BUILD_NUMBER=$(Build.BuildId)
    displayName: 'Build a deployment artifact'
    env:
      SAML2AWS_PASSWORD: $(SAML2AWS_PASSWORD)
      SAML2AWS_USERNAME: $(SAML2AWS_USERNAME)
      SAML2AWS_ROLE: $(SAML2AWS_ROLE)